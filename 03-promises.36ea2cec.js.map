{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAwBnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,SAAAC,GACLJ,EACFF,EAAQ,CAAEH,WAAUS,UAEpBL,EAAO,CAAEJ,WAAUS,YAEpBR,MA/BPT,EAAKC,OAAOiB,iBAAiB,UAAU,SAAAC,GACrCA,EAAEC,iBAGF,IAFA,IAA8BC,EAkCvB,CACLJ,MAAOK,OAAOtB,EAAKI,QAAQmB,OAC3BC,KAAMF,OAAOtB,EAAKK,OAAOkB,OACzBE,OAAQH,OAAOtB,EAAKM,SAASiB,QArCzBG,EAAwBL,EAAxBJ,MAAOO,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAEVE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrDpB,EAAcoB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUS,EAAKY,EAALZ,MACjBa,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANhB,EAAM,UAGjDiB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUS,EAAKY,EAALZ,MAClBa,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANhB,EAAM,UAGjDS,GAASF,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// ===============================\nconst refs = {\n  formEl: document.querySelector('.form'),\n  DelayEL: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', e => {\n  e.preventDefault();\n  let { delay, step, amount } = onGettingData();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n});\n\n// ============Create prom============\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(delay => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onGettingData() {\n  return {\n    delay: Number(refs.DelayEL.value),\n    step: Number(refs.stepEl.value),\n    amount: Number(refs.amountEl.value),\n  };\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","DelayEL","stepEl","amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefault","ref","Number","value","step","amount","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.36ea2cec.js.map"}